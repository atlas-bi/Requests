name: ðŸš€ Release

on:
  workflow_dispatch:
  push:
    branches: [master, alpha, dev]

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      last_release_version: ${{ steps.semantic.outputs.last_release_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

        with:
          fetch-depth: 0
          persist-credentials: false

      - name: âŽ” Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: ðŸ“¥ Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - run: npm run build

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3

        id: semantic
        with:
          semantic_version: 18
          extra_plugins: |
            @semantic-release/changelog@6
            @semantic-release/exec
            @semantic-release/git@10
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PAT }}

  #     - name: Install deps
  #       if: steps.semantic.outputs.new_release_published == 'true'
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install dh-make devscripts dpkg-dev gzip apt-utils -y

  #     - name: Load GPG Keys
  #       if: steps.semantic.outputs.new_release_published == 'true'
  #       run: |
  #         # gpg  --export-secret-keys <key id> | base64
  #         echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import
  #       env:
  #         GPG_SIGNING_KEY: ${{ secrets.PPA_GPG_SECRET }}

  #     - name: Check out repository
  #       if: steps.semantic.outputs.new_release_published == 'true'
  #       uses: actions/checkout@v3
  #       with:
  #         persist-credentials: false
  #         path: atlas

  #     - name: Build deb
  #       if: steps.semantic.outputs.new_release_published == 'true'
  #       run: |
  #         cd ./atlas/packages
  #         cp -r "atlas-requests-<version>" "atlas-requests-$VERSION"
  #         cd "atlas-requests-$VERSION"
  #         find . -type f -name "*" -exec sed -i'' -e "s/<version>/$VERSION/g" {} +
  #         echo "building"
  #         debuild --no-tgz-check -us -uc
  #         cd ..
  #         ls
  #       env:
  #         VERSION: ${{ steps.semantic.outputs.new_release_version }}

  #     - name: Clone PPA
  #       if: steps.semantic.outputs.new_release_published == 'true'
  #       uses: actions/checkout@v3
  #       with:
  #         persist-credentials: false
  #         fetch-depth: 0
  #         repository: atlas-bi/ppa
  #         token: ${{ secrets.PPA_REPO_PAT }}
  #         path: ppa

  #     - name: Move deb to PPA
  #       if: github.ref_name == 'master' && steps.semantic.outputs.new_release_published == 'true'
  #       run: |
  #         cp ./atlas/packages/*.deb ./ppa/deb/pool/stable

  #     - name: Move alpha deb to PPA
  #       if: github.ref_name == 'alpha' && steps.semantic.outputs.new_release_published == 'true'
  #       run: |
  #         cp ./atlas/packages/*.deb ./ppa/deb/pool/unstable

  #     - name: Move dev deb to PPA
  #       if: github.ref_name == 'dev' && steps.semantic.outputs.new_release_published == 'true'
  #       run: |
  #         cp ./atlas/packages/*.deb ./ppa/deb/pool/unstable

  #     - name: Commit changes
  #       if: steps.semantic.outputs.new_release_published == 'true'
  #       run: |
  #         cd ./ppa
  #         git config --local user.name "$USER"
  #         git config --local user.email "$EMAIL"
  #         git add .
  #         git commit -m "added atlas-requests $VERSION"
  #       env:
  #         VERSION: ${{ steps.semantic.outputs.new_release_version }}
  #         USER: ${{ secrets.GIT_USER }}
  #         EMAIL: ${{ secrets.GIT_EMAIL }}

  #     - name: Push changes
  #       if: steps.semantic.outputs.new_release_published == 'true'
  #       uses: ad-m/github-push-action@master
  #       with:
  #         github_token: ${{ secrets.PPA_REPO_PAT }}
  #         branch: master
  #         directory: ppa
  #         repository: atlas-bi/ppa

  # 